{"version":3,"sources":["features/core/components/legend-layout/components/axis-item/index.module.css","features/core/types.ts","features/core/page/index.module.css","features/core/store/utils.ts","features/core/store/index.tsx","features/core/components/store-context/index.tsx","features/core/components/legend-layout/index.module.css","features/core/components/legend-layout/components/tag-item/index.module.css","features/core/components/chart-layout/utils.ts","features/core/components/chart-layout/index.tsx","features/core/hooks/use-hover.ts","features/core/components/legend-layout/components/tag-item/index.tsx","features/core/components/legend-layout/components/axis-item/index.tsx","features/core/components/legend-layout/components/new-axis-creator/index.tsx","features/core/components/legend-layout/index.tsx","features/core/components/header-layout/components/sidebar-trigger/index.tsx","features/core/components/header-layout/components/settings-trigger/index.tsx","features/core/components/header-layout/index.tsx","features/core/page/index.tsx","index.tsx","features/core/components/chart-layout/index.module.css","features/core/components/legend-layout/components/new-axis-creator/index.module.css","features/core/components/settings/index.tsx","features/core/components/header-layout/index.module.css","features/core/hooks/use-root-data.ts","features/core/hooks/use-store-data.ts"],"names":["module","exports","ModalEnum","randomQuantities","randomVariables","getRandomTagName","quantity","random","arrayElement","variable","createCoreStore","colorSet","ColorSet","isLoaded","modalStates","hoveredSeries","setHoveredSeries","value","this","tagsCount","pointsCount","isRandomTagsNames","setSettings","changeStateModal","props","type","isSiderCollapsed","isSiderCollapsingNow","setSiderCollapsed","setTimeout","chartInstance","setChartInstance","tagsDictionary","generateTags","tags","Array","from","length","v","key","reduce","acc","tag","id","name","color","next","hex","console","log","isTagDraggingNow","setIsTagDraggingNow","axesDictionary","setAxesDictionary","axesOrder","setAxesOrder","generateAxes","axesCount","axes","Object","keys","data","generateData","ts","Date","Math","round","storeContext","React","createContext","StoreProvider","children","core","useLocalStore","store","useMemo","Provider","am4core","minPolylineStep","createDateAxis","chart","dateAxis","xAxes","push","am4charts","startLocation","endLocation","renderer","minGridDistance","line","stroke","labels","template","location","verticalCenter","horizontalCenter","createValueAxis","index","valueAxis","yAxes","gridContainer","background","fill","inside","maxLabelPosition","marginTop","createSeriesInstance","seriesInstance","series","strokeWidth","dataFields","valueY","dateX","yAxis","segment","segments","interactionsEnabled","states","create","properties","tooltipText","tooltip","getFillFromObject","ChartLayout","observer","useRootData","state","useEffect","div","padding","leftAxesContainer","layout","cursor","xAxis","createChart","dispose","hovered","toFront","each","setState","bulletsContainer","processOver","values","find","clear","reset","forEach","axisKey","map","tagKey","newValueAxis","createSeries","className","css","chartLayout","useHover","useState","setValue","ref","useRef","handleMouseOver","handleMouseOut","node","current","addEventListener","removeEventListener","TagItem","hoverRef","isHovered","draggableId","snapshot","innerRef","draggableProps","dragHandleProps","cn","tagItem","isTagItemDraggableNow","isDragging","hoverer","tagDragIcon","AxisItem","axis","providedDraggable","axisItem","isAxisItemDraggableNow","axisTitle","isAxisDraggableBordered","axisDragIcon","droppableId","providedDroppable","droppableProps","axisTags","isAxisTagsDroppableNow","tagIndex","placeholder","NewAxisCreator","direction","provided","droppableContainer","isDroppableNow","dropHintLayout","LegendLayout","legendLayout","legendTitle","legendTitleHidden","onBeforeDragStart","initial","onDragEnd","destination","source","newAxesOrder","splice","startAxis","finishAxis","highestAxesNumber","max","axeisKey","parseInt","replace","newAxis","newAxesDictionary","filter","startTagsKeys","newStartAxis","finishTagsKeys","newFinishAxis","newTags","isDraggingOver","legendDroppableContainer","isContainerDroppableNow","SidebarTrigger","disabled","icon","onClick","SettingsTrigger","handleOpenSettings","useCallback","settings","visible","HeaderLayout","headerLayout","Content","Sider","Header","Settings","lazy","Core","modals","sider","collapsed","collapsedWidth","collapsible","theme","trigger","width","header","recalculatingResult","title","content","contentHidden","fallback","ReactDOM","render","document","getElementById","labelCol","span","wrapperCol","modalState","changeState","handleCloseModal","useForm","form","destroyOnClose","okButtonProps","htmlType","onCancel","onOk","submit","initialValues","onFinish","Item","label","min","step","valuePropName","dataSelector","context","storeSelector","useContext","Error","useStoreData","contextData"],"mappings":"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","file":"static/js/main.1ae792bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"axisItem\":\"axis-item_axisItem__30H4p\",\"isAxisItemDraggableNow\":\"axis-item_isAxisItemDraggableNow__16JzR\",\"axisTitle\":\"axis-item_axisTitle__14LIv\",\"axisTags\":\"axis-item_axisTags__2vjPB\",\"isAxisDraggableBordered\":\"axis-item_isAxisDraggableBordered__3HKc-\",\"isAxisTagsDroppableNow\":\"axis-item_isAxisTagsDroppableNow__1o5NZ\",\"axisDragIcon\":\"axis-item_axisDragIcon__xGLn_\"};","export type PayloadUpdateScheme = \"name\" | \"scheme\" | \"svg\";\n\nexport type DataPoint = {\n  ts: Date;\n};\n\nexport type DataTags = {\n  [key: string]: number;\n};\n\nexport type Tag = {\n  id: string;\n  name: string;\n  color: string;\n};\n\nexport type Tags = {\n  [key: string]: Tag;\n};\n\nexport type Axis = {\n  id: string;\n  name: string;\n  tags: string[];\n};\n\nexport type Axes = {\n  [key: string]: Axis;\n};\n\nexport enum ModalEnum {\n  settings = \"settings\",\n}\n\ntype Props = {\n  visible: boolean;\n};\n\nexport type ModalProps = {\n  type: ModalEnum;\n  props: Props;\n};\n\nexport type ModalState = {\n  [key in ModalEnum]?: ModalProps;\n};\n\nexport type SettingsState = {\n  tagsCount: number;\n  pointsCount: number;\n  isRandomTagsNames: boolean;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"page_root__2umMH\",\"layout\":\"page_layout__8xvbr\",\"sider\":\"page_sider__3h4Nr\",\"header\":\"page_header__3JIsH\",\"recalculatingResult\":\"page_recalculatingResult__mG2-C\",\"content\":\"page_content__3vzB4\",\"contentHidden\":\"page_contentHidden__12tl9\"};","import { random } from \"faker\";\n\nconst randomQuantities = [\n  \"Напряжение U\",\n  \"Ток I\",\n  \"Активная мощность P\",\n  \"Реактивная мощность Q\",\n  \"Полная мощность S\",\n  \"Фазное напряжение U\",\n];\nconst randomVariables = [\"a\", \"b\", \"c\"];\n\nexport const getRandomTagName = (): string => {\n  const quantity = random.arrayElement(randomQuantities);\n  const variable = random.arrayElement(randomVariables);\n\n  return `${quantity}${variable}`;\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ColorSet } from \"@amcharts/amcharts4/core\";\nimport { XYChart } from \"@amcharts/amcharts4/charts\";\n\nimport {\n  Axes,\n  DataPoint,\n  DataTags,\n  ModalProps,\n  ModalState,\n  SettingsState,\n  Tag,\n  Tags,\n} from \"../types\";\nimport { getRandomTagName } from \"./utils\";\n\nexport const createCoreStore = () => {\n  return {\n    colorSet: new ColorSet(),\n\n    isLoaded: 0,\n\n    modalStates: null as ModalState | null,\n\n    hoveredSeries: null as null | Tag,\n    setHoveredSeries(value: null | Tag) {\n      this.hoveredSeries = value;\n    },\n\n    tagsCount: 5 as number,\n    pointsCount: 75 as number,\n    isRandomTagsNames: true,\n\n    setSettings({ tagsCount, pointsCount, isRandomTagsNames }: SettingsState) {\n      this.tagsCount = tagsCount;\n      this.pointsCount = pointsCount;\n      this.isRandomTagsNames = isRandomTagsNames;\n    },\n\n    changeStateModal(props: ModalProps) {\n      if (!this.modalStates) {\n        this.modalStates = { [props.type]: props };\n      } else {\n        this.modalStates[props.type] = props;\n      }\n    },\n\n    isSiderCollapsed: false,\n    isSiderCollapsingNow: false,\n    setSiderCollapsed(value: boolean) {\n      this.isSiderCollapsingNow = true;\n\n      this.isSiderCollapsed = value;\n      setTimeout(() => {\n        this.isSiderCollapsingNow = false;\n      }, 1000); // timing like sidebar transition duration\n    },\n\n    chartInstance: null as XYChart | null,\n\n    setChartInstance(value: XYChart) {\n      this.chartInstance = value;\n    },\n\n    tagsDictionary: {} as Tags,\n    generateTags(tagsCount: number) {\n      const tags = Array.from(\n        { length: tagsCount },\n        (v, key) => key + 1\n      ).reduce((acc, key) => {\n        const tag = {\n          id: `tag-${key}`,\n          name: this.isRandomTagsNames ? getRandomTagName() : `Tag-${key}`,\n          color: this.colorSet.next().hex,\n        };\n        return {\n          ...acc,\n          [`tag-${key}`]: tag,\n        };\n      }, {} as Tags);\n      console.log(\"tags\", tags);\n      this.tagsDictionary = tags;\n    },\n\n    isTagDraggingNow: false,\n    setIsTagDraggingNow(value: boolean) {\n      this.isTagDraggingNow = value;\n    },\n\n    axesDictionary: {} as Axes,\n    setAxesDictionary(value: Axes) {\n      this.axesDictionary = value;\n    },\n    axesOrder: [] as string[],\n    setAxesOrder(value: string[]) {\n      this.axesOrder = value;\n    },\n    generateAxes(axesCount: number) {\n      const axes = Array.from(\n        { length: axesCount },\n        (v, key) => key + 1\n      ).reduce((acc, key) => {\n        return {\n          ...acc,\n          [`axis-${key}`]: {\n            name: `Axis-${key}`,\n            id: `axis-${key}`,\n            tags: [this.tagsDictionary[`tag-${key}`].id],\n          },\n        };\n      }, {} as Axes);\n      const axesOrder = Object.keys(axes);\n      console.log(\"axes\", axes);\n\n      this.axesOrder = axesOrder;\n      this.axesDictionary = axes;\n    },\n\n    data: [] as DataPoint[],\n    generateData({ tagsCount = 10, pointsCount = 100 }) {\n      this.generateTags(tagsCount);\n      this.generateAxes(tagsCount);\n      const data: DataPoint[] = Array.from(\n        { length: pointsCount },\n        (v, key) => {\n          return {\n            ts: new Date(2020, 0, key),\n            ...Object.keys(this.tagsDictionary).reduce(\n              (acc, tag) => ({\n                ...acc,\n                [tag]: Math.round(Math.random() * 100) + 100,\n                // Math.round((Math.random() < 0.5 ? 1 : -1) + key / 5),\n              }),\n              {} as DataTags\n            ),\n          };\n        }\n      );\n      console.log(\"data\", data);\n      this.data = data;\n    },\n  };\n};\n\nexport type CoreStore = ReturnType<typeof createCoreStore>;\n","import React, { useMemo } from \"react\";\n\nimport { useLocalStore } from \"mobx-react-lite\";\n\nimport { StoreState } from \"../stores-types\";\nimport { createCoreStore } from \"../../store\";\n\ntype StoreProviderProps = {\n  children?: React.ReactNode;\n};\n\nexport const StoreProvider: React.FC = ({ children }: StoreProviderProps) => {\n  const core = useLocalStore(createCoreStore);\n\n  const store = useMemo(() => ({ core }), [core]);\n\n  return (\n    <storeContext.Provider value={store}>{children}</storeContext.Provider>\n  );\n};\n\nexport const storeContext = React.createContext<StoreState | null>(null);\n\nexport default StoreProvider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"legendLayout\":\"legend-layout_legendLayout__1XgHa\",\"legendTitle\":\"legend-layout_legendTitle__1Prdt\",\"legendTitleHidden\":\"legend-layout_legendTitleHidden__2tkku\",\"legendDroppableContainer\":\"legend-layout_legendDroppableContainer__2zJkG\",\"isContainerDroppableNow\":\"legend-layout_isContainerDroppableNow__vH6-F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tagItem\":\"tag-item_tagItem__1k1Fb\",\"hoverer\":\"tag-item_hoverer__1dN5s\",\"tagDragIcon\":\"tag-item_tagDragIcon__1eNNY\",\"isTagItemDraggableNow\":\"tag-item_isTagItemDraggableNow__1zNQN\"};","import * as am4charts from \"@amcharts/amcharts4/charts\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport { Tag } from \"features/core/types\";\nimport { ValueAxis, XYChart, XYSeries } from \"@amcharts/amcharts4/charts\";\n\nam4core.options.minPolylineStep = 5;\nconst createChart = (div: string): { chart: XYChart } => {\n  const chart = am4core.create(div, am4charts.XYChart);\n\n  chart.padding(0, 0, 0, 0); // reset default 0's\n  chart.leftAxesContainer.layout = \"vertical\";\n\n  const dateAxis = createDateAxis(chart);\n\n  const cursor = new am4charts.XYCursor();\n  chart.cursor = cursor;\n  chart.cursor.xAxis = dateAxis;\n\n  return { chart };\n};\n\nconst createDateAxis = (chart: XYChart) => {\n  const dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n  dateAxis.startLocation = 0.5;\n  dateAxis.endLocation = 0.5;\n  dateAxis.renderer.minGridDistance = 100;\n\n  dateAxis.renderer.line.stroke = am4core.color(\"#000000\");\n\n  dateAxis.renderer.labels.template.location = 0.5;\n  dateAxis.renderer.labels.template.verticalCenter = \"middle\";\n  dateAxis.renderer.labels.template.horizontalCenter = \"middle\";\n\n  return dateAxis;\n};\n\nconst createValueAxis = (\n  chart: am4charts.XYChart,\n  index: number\n): ValueAxis => {\n  const valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n\n  valueAxis.renderer.gridContainer.background.fill = am4core.color(\"#ffffff\");\n  valueAxis.renderer.minGridDistance = 30;\n\n  valueAxis.renderer.inside = true;\n  valueAxis.renderer.maxLabelPosition = 0.99;\n  valueAxis.renderer.labels.template.verticalCenter = \"bottom\";\n\n  if (index !== 0) {\n    valueAxis.marginTop = 10;\n  }\n\n  return valueAxis;\n};\n\nconst createSeries = (\n  chart: XYChart,\n  valueAxis: ValueAxis,\n  tag: Tag,\n  index: number\n): XYSeries => {\n  let series: am4charts.XYSeries;\n  if (!valueAxis) {\n    const newValueAxis = createValueAxis(chart, index);\n    series = createSeriesInstance(chart, newValueAxis, tag);\n  } else {\n    series = createSeriesInstance(chart, valueAxis, tag);\n  }\n\n  return series;\n};\n\nconst createSeriesInstance = (\n  chart: am4charts.XYChart,\n  valueAxis: ValueAxis,\n  { id, name, color }: Tag\n) => {\n  const seriesInstance = chart.series.push(new am4charts.LineSeries());\n  seriesInstance.stroke = am4core.color(color);\n  seriesInstance.strokeWidth = 2;\n  seriesInstance.dataFields.valueY = `${id}`;\n  seriesInstance.dataFields.dateX = \"ts\";\n  seriesInstance.yAxis = valueAxis;\n  seriesInstance.name = name;\n  seriesInstance.id = id;\n\n  const segment = seriesInstance.segments.template;\n  segment.interactionsEnabled = true;\n\n  const hoverState = segment.states.create(\"hover\");\n  hoverState.properties.strokeWidth = 3;\n\n  const dimmed = segment.states.create(\"dimmed\");\n  dimmed.properties.stroke = am4core.color(\"#dadada\");\n\n  seriesInstance.tooltipText = `{name}\\nЗначение: {valueY}`;\n  seriesInstance.tooltip!.getFillFromObject = false;\n  seriesInstance.tooltip!.background.fill = am4core.color(color);\n\n  return seriesInstance;\n};\n\nexport { createChart, createSeries, createValueAxis };\n","import React, { useEffect } from \"react\";\n\nimport { observer } from \"mobx-react-lite\";\nimport { useRootData } from \"features/core/hooks\";\n\nimport { XYSeries } from \"@amcharts/amcharts4/charts\";\nimport { createChart, createSeries, createValueAxis } from \"./utils\";\n\nimport css from \"./index.module.css\";\n\nconst ChartLayout: React.FC = observer(() => {\n  const {\n    tagsDictionary,\n    axesOrder,\n    axesDictionary,\n    data,\n    chartInstance,\n    colorSet,\n    hoveredSeries,\n    setChartInstance,\n  } = useRootData((state) => ({\n    tagsDictionary: state.core.tagsDictionary,\n    axesOrder: state.core.axesOrder,\n    axesDictionary: state.core.axesDictionary,\n    data: state.core.data,\n    chartInstance: state.core.chartInstance,\n    colorSet: state.core.colorSet,\n    hoveredSeries: state.core.hoveredSeries,\n    setChartInstance: state.core.setChartInstance,\n  }));\n\n  useEffect(() => {\n    const { chart } = createChart(\"chart\");\n    setChartInstance(chart);\n    return () => chart.dispose();\n  }, [setChartInstance]);\n\n  useEffect(() => {\n    console.log(\"hoveredSeries\", hoveredSeries);\n\n    function processOver(hovered: XYSeries | undefined) {\n      if (!hovered) return;\n      hovered.toFront();\n\n      // @ts-ignore\n      hovered.segments.each((segment) => {\n        segment.setState(\"hover\");\n      });\n\n      chartInstance?.series.each((series) => {\n        if (series !== hovered) {\n          // @ts-ignore\n\n          series.segments.each((segment) => {\n            segment.setState(\"dimmed\");\n          });\n          series.bulletsContainer.setState(\"dimmed\");\n        }\n      });\n    }\n\n    function processOut() {\n      chartInstance?.series.each((series) => {\n        // @ts-ignore\n        series.segments.each((segment) => {\n          segment.setState(\"default\");\n        });\n        series.bulletsContainer.setState(\"default\");\n      });\n    }\n\n    if (hoveredSeries) {\n      const hovered = chartInstance?.series.values.find(\n        (series) => series.id === hoveredSeries.id\n      );\n      processOver(hovered);\n    } else {\n      processOut();\n    }\n  }, [chartInstance, hoveredSeries]);\n\n  useEffect(() => {\n    if (chartInstance) {\n      if (data.length) {\n        chartInstance.yAxes.clear();\n        chartInstance.series.clear();\n        colorSet.reset();\n        chartInstance.data = data;\n\n        axesOrder.forEach((axisKey, index) => {\n          const valueAxis = createValueAxis(chartInstance, index);\n\n          const axis = axesDictionary[axisKey];\n\n          axis.tags.map((tagKey) => {\n            const tag = tagsDictionary[tagKey];\n            return createSeries(chartInstance, valueAxis, tag, 0);\n          });\n        });\n      }\n    }\n  }, [\n    colorSet,\n    axesOrder,\n    axesDictionary,\n    tagsDictionary,\n    data,\n    chartInstance,\n  ]);\n\n  return (\n    <div className={css.layout}>\n      <div className={css.chartLayout}>\n        <div className={css.chart} id=\"chart\" />\n      </div>\n    </div>\n  );\n});\n\nexport default ChartLayout;\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable consistent-return */\n// @ts-nocheck\nimport { useEffect, useRef, useState } from \"react\";\n\nfunction useHover(): any {\n  const [value, setValue] = useState(false);\n\n  const ref = useRef(null);\n\n  const handleMouseOver = () => setValue(true);\n  const handleMouseOut = () => setValue(false);\n\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (node) {\n        node.addEventListener(\"mouseover\", handleMouseOver);\n        node.addEventListener(\"mouseout\", handleMouseOut);\n\n        return () => {\n          node.removeEventListener(\"mouseover\", handleMouseOver);\n          node.removeEventListener(\"mouseout\", handleMouseOut);\n        };\n      }\n    },\n    [ref.current] // Recall only if ref changes\n  );\n\n  return [ref, value];\n}\n\nexport default useHover;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport { Draggable } from \"react-beautiful-dnd\";\nimport React, { FC, useEffect } from \"react\";\nimport cn from \"classnames\";\n\nimport { Tag } from \"features/core/types\";\nimport { useRootData } from \"features/core/hooks\";\nimport useHover from \"features/core/hooks/use-hover\";\n\nimport css from \"./index.module.css\";\n\ntype TagItemProps = {\n  tag: Tag;\n  index: number;\n};\nconst TagItem: FC<TagItemProps> = ({ tag, index }: TagItemProps) => {\n  const [hoverRef, isHovered] = useHover();\n  const { setHoveredSeries } = useRootData((state) => ({\n    setHoveredSeries: state.core.setHoveredSeries,\n  }));\n\n  useEffect(() => {\n    if (isHovered) {\n      setHoveredSeries(tag);\n    } else {\n      setHoveredSeries(null);\n    }\n  }, [tag, isHovered, setHoveredSeries]);\n\n  return (\n    <Draggable draggableId={`${tag.id}`} index={index}>\n      {({ innerRef, draggableProps, dragHandleProps }, snapshot) => (\n        <h4\n          ref={innerRef}\n          className={cn(css.tagItem, {\n            [css.isTagItemDraggableNow]: snapshot.isDragging,\n          })}\n          {...draggableProps}\n          {...dragHandleProps}\n        >\n          <div ref={hoverRef} className={css.hoverer}>\n            <span>{tag.name}</span>\n            <span className={css.tagDragIcon}>⋮</span>\n          </div>\n        </h4>\n      )}\n    </Draggable>\n  );\n};\n\nexport default TagItem;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { useRootData } from \"features/core/hooks\";\nimport React, { FC } from \"react\";\nimport cn from \"classnames\";\n\nimport { Axis } from \"features/core/types\";\nimport { observer } from \"mobx-react-lite\";\nimport TagItem from \"../tag-item\";\nimport css from \"./index.module.css\";\n\ntype AxisItemProps = {\n  axis: Axis;\n  index: number;\n};\nconst AxisItem: FC<AxisItemProps> = observer(\n  ({ axis: { tags, name, id }, index }: AxisItemProps) => {\n    const { tagsDictionary, isTagDraggingNow } = useRootData((state) => ({\n      tagsDictionary: state.core.tagsDictionary,\n      isTagDraggingNow: state.core.isTagDraggingNow,\n    }));\n\n    return (\n      <Draggable draggableId={`${id}`} index={index}>\n        {(providedDraggable, { isDragging }) => (\n          <div\n            ref={providedDraggable.innerRef}\n            className={cn(css.axisItem, {\n              [css.isAxisItemDraggableNow]: isDragging,\n            })}\n            {...providedDraggable.draggableProps}\n            {...providedDraggable.dragHandleProps}\n          >\n            <h4\n              className={cn(css.axisTitle, {\n                [css.isAxisDraggableBordered]: isDragging,\n              })}\n            >\n              <span>{name}</span>\n              <span className={css.axisDragIcon}>⋮⋮</span>\n            </h4>\n            <Droppable droppableId={id} type=\"tags\">\n              {(providedDroppable) => (\n                <div\n                  ref={providedDroppable.innerRef}\n                  {...providedDroppable.droppableProps}\n                  className={cn(css.axisTags, {\n                    [css.isAxisTagsDroppableNow]: isTagDraggingNow,\n                    [css.isAxisDraggableBordered]: isDragging,\n                  })}\n                >\n                  {tags.map((tagKey, tagIndex) => {\n                    const tag = tagsDictionary[tagKey];\n                    return <TagItem key={tag.id} index={tagIndex} tag={tag} />;\n                  })}\n                  {providedDroppable.placeholder}\n                </div>\n              )}\n            </Droppable>\n\n            <div />\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n);\n\nexport default AxisItem;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport cn from \"classnames\";\n\nimport { useRootData } from \"features/core/hooks\";\n\nimport css from \"./index.module.css\";\n\nconst NewAxisCreator: React.FC = observer(() => {\n  const { isTagDraggingNow } = useRootData((state) => ({\n    isTagDraggingNow: state.core.isTagDraggingNow,\n  }));\n\n  return (\n    <Droppable direction=\"vertical\" droppableId=\"new-axis\" type=\"tags\">\n      {(provided) => (\n        <div\n          className={cn(css.droppableContainer, {\n            [css.isDroppableNow]: isTagDraggingNow,\n          })}\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n        >\n          <div className={css.dropHintLayout}>\n            <span>Drop tag here </span>\n            <span>to create new axis</span>\n          </div>\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  );\n});\n\nexport default NewAxisCreator;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport {\n  DragDropContext,\n  DragStart,\n  DropResult,\n  Droppable,\n} from \"react-beautiful-dnd\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport cn from \"classnames\";\n\nimport { useRootData } from \"features/core/hooks\";\n\nimport { AxisItem } from \"./components\";\nimport NewAxisCreator from \"./components/new-axis-creator\";\nimport css from \"./index.module.css\";\n\nconst LegendLayout: React.FC = observer(() => {\n  const {\n    isSiderCollapsed,\n    axesOrder,\n    axesDictionary,\n    setAxesOrder,\n    setAxesDictionary,\n    setIsTagDraggingNow,\n  } = useRootData((state) => ({\n    isSiderCollapsed: state.core.isSiderCollapsed,\n    axesOrder: state.core.axesOrder,\n    axesDictionary: state.core.axesDictionary,\n    setAxesOrder: state.core.setAxesOrder,\n    setAxesDictionary: state.core.setAxesDictionary,\n    setIsTagDraggingNow: state.core.setIsTagDraggingNow,\n  }));\n\n  const onDragEnd = ({\n    draggableId,\n    destination,\n    source,\n    type,\n  }: DropResult) => {\n    setIsTagDraggingNow(false);\n\n    if (!destination) return;\n\n    const isSamePlace =\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index;\n\n    if (isSamePlace) return;\n\n    if (type === \"axes\") {\n      // To re-order axes\n      const newAxesOrder = Array.from(axesOrder);\n      newAxesOrder.splice(source.index, 1);\n      newAxesOrder.splice(destination.index, 0, draggableId);\n\n      setAxesOrder(newAxesOrder);\n      return;\n    }\n\n    const startAxis = axesDictionary[source.droppableId];\n    const finishAxis = axesDictionary[destination.droppableId];\n\n    if (type === \"tags\" && destination.droppableId === \"new-axis\") {\n      const highestAxesNumber =\n        Math.max(\n          ...axesOrder.map((axeisKey) =>\n            parseInt(axeisKey.replace(/[^\\d]/g, \"\"), 10)\n          )\n        ) + 1;\n\n      const newAxis = {\n        [`axis-${highestAxesNumber}`]: {\n          id: `axis-${highestAxesNumber}`,\n          name: `Axis-${highestAxesNumber}`,\n          tags: [draggableId],\n        },\n      };\n\n      const newAxesDictionary = {\n        ...axesDictionary,\n        ...newAxis,\n        [source.droppableId]: {\n          ...startAxis,\n          tags: startAxis.tags.filter((tag) => tag !== draggableId),\n        },\n      };\n\n      // Clearing axes with no tags\n      if (!newAxesDictionary[source.droppableId].tags.length)\n        delete newAxesDictionary[source.droppableId];\n\n      setAxesOrder(Object.keys(newAxesDictionary));\n      setAxesDictionary(newAxesDictionary);\n\n      return;\n    }\n\n    if (startAxis === finishAxis) {\n      // Moving tags inside axis\n\n      const newTags = Array.from(startAxis.tags);\n      newTags.splice(source.index, 1);\n      newTags.splice(destination.index, 0, draggableId);\n\n      const newAxesDictionary = {\n        ...axesDictionary,\n        [source.droppableId]: {\n          ...startAxis,\n          tags: newTags,\n        },\n      };\n      setAxesDictionary(newAxesDictionary);\n      return;\n    }\n\n    // Moving tag from one axis to another\n    const startTagsKeys = Array.from(startAxis.tags);\n    // Updating start axis - removing draggable tag\n    startTagsKeys.splice(source.index, 1);\n\n    const newStartAxis = {\n      [source.droppableId]: {\n        ...startAxis,\n        tags: startTagsKeys,\n      },\n    };\n\n    const finishTagsKeys = Array.from(finishAxis.tags);\n    // Updating finish axis - adding draggable tag\n    finishTagsKeys.splice(destination.index, 0, draggableId);\n\n    const newFinishAxis = {\n      [destination.droppableId]: {\n        ...finishAxis,\n        tags: finishTagsKeys,\n      },\n    };\n\n    const newAxesDictionary = {\n      ...axesDictionary,\n      ...newStartAxis,\n      ...newFinishAxis,\n    };\n\n    if (!startTagsKeys.length) {\n      // Clearing axes with no tags\n      delete newAxesDictionary[source.droppableId];\n\n      setAxesOrder(axesOrder.filter((axis) => axis !== source.droppableId));\n    }\n\n    setAxesDictionary(newAxesDictionary);\n  };\n\n  const onBeforeDragStart = (initial: DragStart) =>\n    setIsTagDraggingNow(initial.type === \"tags\");\n\n  return (\n    <div className={css.legendLayout}>\n      <h2\n        className={cn(css.legendTitle, {\n          [css.legendTitleHidden]: isSiderCollapsed,\n        })}\n      >\n        LEGEND\n      </h2>\n      {axesOrder.length && (\n        <DragDropContext\n          onBeforeDragStart={onBeforeDragStart}\n          onDragEnd={onDragEnd}\n        >\n          <Droppable direction=\"vertical\" droppableId=\"axes\" type=\"axes\">\n            {(provided, { isDraggingOver }) => (\n              <div\n                className={cn(css.legendDroppableContainer, {\n                  [css.isContainerDroppableNow]: isDraggingOver,\n                })}\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {axesOrder.map((axisKey, index) => {\n                  const axis = axesDictionary[axisKey];\n                  return <AxisItem key={axisKey} axis={axis} index={index} />;\n                })}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n          <NewAxisCreator />\n          {/* {TODO: add trash droppable} */}\n        </DragDropContext>\n      )}\n    </div>\n  );\n});\n\nexport default LegendLayout;\n","import { Button } from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport MenuFoldOutlined from \"@ant-design/icons/MenuFoldOutlined\";\nimport MenuUnfoldOutlined from \"@ant-design/icons/MenuUnfoldOutlined\";\n\nimport React from \"react\";\n\nimport { useRootData } from \"features/core/hooks\";\n\nconst SidebarTrigger: React.FC = observer(() => {\n  const {\n    isSiderCollapsed,\n    isSiderCollapsingNow,\n    setSiderCollapsed,\n  } = useRootData((state) => ({\n    isSiderCollapsed: state.core.isSiderCollapsed,\n    isSiderCollapsingNow: state.core.isSiderCollapsingNow,\n\n    setSiderCollapsed: state.core.setSiderCollapsed,\n  }));\n\n  const onCollapse = () => setSiderCollapsed(!isSiderCollapsed);\n\n  return (\n    <Button\n      disabled={isSiderCollapsingNow}\n      icon={isSiderCollapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\n      onClick={onCollapse}\n      type=\"link\"\n    />\n  );\n});\n\nexport default SidebarTrigger;\n","import { Button } from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport SettingOutlined from \"@ant-design/icons/SettingOutlined\";\n\nimport React, { useCallback } from \"react\";\n\nimport { ModalEnum } from \"features/core/types\";\nimport { useRootData } from \"features/core/hooks\";\n\nconst SettingsTrigger: React.FC = observer(() => {\n  const { changeStateModal } = useRootData((state) => ({\n    modalStates: state.core.modalStates,\n    changeStateModal: state.core.changeStateModal,\n  }));\n\n  const handleOpenSettings = useCallback(() => {\n    changeStateModal({ type: ModalEnum.settings, props: { visible: true } });\n  }, [changeStateModal]);\n\n  return (\n    <Button\n      icon={<SettingOutlined />}\n      onClick={handleOpenSettings}\n      type=\"link\"\n    />\n  );\n});\n\nexport default SettingsTrigger;\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\n\nimport { SettingsTrigger, SidebarTrigger } from \"./components\";\n\nimport css from \"./index.module.css\";\n\nconst HeaderLayout: React.FC = observer(() => {\n  return (\n    <div className={css.headerLayout}>\n      <SidebarTrigger />\n      <SettingsTrigger />\n    </div>\n  );\n});\n\nexport default HeaderLayout;\n","import { Layout, Result } from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport AreaChartOutlined from \"@ant-design/icons/AreaChartOutlined\";\n\nimport React, { Suspense, lazy, useEffect } from \"react\";\n\nimport cn from \"classnames\";\n\nimport { ChartLayout, LegendLayout } from \"../components\";\n\nimport { ModalEnum } from \"../types\";\nimport { useRootData } from \"../hooks\";\nimport HeaderLayout from \"../components/header-layout\";\nimport css from \"./index.module.css\";\n\nconst { Content, Sider, Header } = Layout;\n\nconst Settings = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"rule-manager-lazy\"  */ \"../components/settings\"\n    )\n);\n\nconst Core: React.FC = observer(() => {\n  const {\n    modals,\n    isSiderCollapsed,\n    isSiderCollapsingNow,\n    tagsCount,\n    pointsCount,\n    isRandomTagsNames,\n    generateData,\n  } = useRootData((state) => ({\n    modals: state.core.modalStates,\n    isSiderCollapsed: state.core.isSiderCollapsed,\n    isSiderCollapsingNow: state.core.isSiderCollapsingNow,\n    tagsCount: state.core.tagsCount,\n    pointsCount: state.core.pointsCount,\n    isRandomTagsNames: state.core.isRandomTagsNames,\n    generateData: state.core.generateData,\n  }));\n\n  useEffect(() => {\n    generateData({ tagsCount, pointsCount });\n  }, [tagsCount, pointsCount, isRandomTagsNames, generateData]);\n\n  return (\n    <Layout className={css.layout}>\n      <Sider\n        className={css.sider}\n        collapsed={isSiderCollapsed}\n        collapsedWidth={150}\n        collapsible\n        theme=\"light\"\n        trigger={null}\n        width=\"20%\"\n      >\n        <LegendLayout />\n      </Sider>\n\n      <Layout className=\"site-layout\">\n        <Header className={css.header}>\n          <HeaderLayout />\n        </Header>\n        {isSiderCollapsingNow && (\n          <Result\n            className={css.recalculatingResult}\n            icon={<AreaChartOutlined />}\n            title=\"Recalculating...\"\n          />\n        )}\n        <Content\n          className={cn(css.content, {\n            [css.contentHidden]: isSiderCollapsingNow,\n          })}\n        >\n          <ChartLayout />\n        </Content>\n      </Layout>\n\n      {modals && modals[ModalEnum.settings] && (\n        <Suspense fallback={null}>\n          <Settings />\n        </Suspense>\n      )}\n    </Layout>\n  );\n});\n\nexport default Core;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"antd/dist/antd.css\";\n\nimport { Core, StoreProvider } from \"features/core\";\n\nReactDOM.render(\n  <StoreProvider>\n    <Core />\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"chart-layout_layout__3AZ1P\",\"chartLayout\":\"chart-layout_chartLayout__2GBLU\",\"chart\":\"chart-layout_chart__24cdx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"droppableContainer\":\"new-axis-creator_droppableContainer__2skdI\",\"isDroppableNow\":\"new-axis-creator_isDroppableNow__2ni8Q\",\"dropHintLayout\":\"new-axis-creator_dropHintLayout__38_OC\"};","/* eslint-disable react/jsx-props-no-spreading */\nimport { Form, InputNumber, Modal, Switch } from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\n\nimport { ModalEnum, SettingsState } from \"features/core/types\";\nimport { useRootData } from \"features/core/hooks\";\n\nconst layout = {\n  labelCol: { span: 12 },\n  wrapperCol: { span: 12 },\n};\n\nconst Settings: React.FC = observer(() => {\n  const {\n    modalState,\n    tagsCount,\n    pointsCount,\n    isRandomTagsNames,\n    changeState,\n    setSettings,\n  } = useRootData((store) => ({\n    modalState: store.core.modalStates?.[ModalEnum.settings],\n    tagsCount: store.core.tagsCount,\n    pointsCount: store.core.pointsCount,\n    isRandomTagsNames: store.core.isRandomTagsNames,\n    changeState: store.core.changeStateModal,\n    setSettings: store.core.setSettings,\n  }));\n\n  const handleCloseModal = () => {\n    changeState({ type: ModalEnum.settings, props: { visible: false } });\n  };\n\n  const [form] = Form.useForm();\n\n  const onFinish = (values: SettingsState) => {\n    console.log(\"Success:\", values);\n    setSettings(values);\n  };\n\n  const handleOk = () => {\n    form.submit();\n    handleCloseModal();\n  };\n\n  return (\n    <Modal\n      destroyOnClose\n      okButtonProps={{ htmlType: \"submit\" }}\n      onCancel={handleCloseModal}\n      onOk={handleOk}\n      title=\"Settings\"\n      visible={modalState?.props.visible}\n      width={400}\n    >\n      <Form\n        {...layout}\n        form={form}\n        initialValues={{\n          pointsCount,\n          tagsCount,\n          isRandomTagsNames,\n        }}\n        onFinish={onFinish}\n      >\n        <Form.Item label=\"Points count\" name=\"pointsCount\">\n          <InputNumber max={1000} min={50} step={50} />\n        </Form.Item>\n        <Form.Item label=\"Tags count\" name=\"tagsCount\">\n          <InputNumber max={15} min={1} />\n        </Form.Item>\n        <Form.Item\n          label=\"Random tags names\"\n          name=\"isRandomTagsNames\"\n          valuePropName=\"checked\"\n        >\n          <Switch />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n});\n\nexport default Settings;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerLayout\":\"header-layout_headerLayout__3SMKc\"};","import { StoreState } from \"features/core/components/stores-types\";\nimport { storeContext } from \"features/core/components/store-context\";\nimport { useStoreData } from \"./use-store-data\";\n\nexport const useRootData = <Selection>(\n  dataSelector: (store: StoreState) => Selection\n): Selection =>\n  useStoreData(storeContext, (contextData) => contextData!, dataSelector);\n","import React from \"react\";\n\n// import { useObserver } from 'mobx-react-lite';\n\nexport const useStoreData = <Selection, ContextData, Store>(\n  context: React.Context<ContextData>,\n  storeSelector: (contextData: ContextData) => Store,\n  dataSelector: (store: Store) => Selection\n): Selection => {\n  const value = React.useContext(context);\n  if (!value) {\n    throw new Error();\n  }\n  const store = storeSelector(value);\n  return dataSelector(store);\n  // return useObserver(() => {\n  //   return dataSelector(store);\n  // });\n};\n"],"sourceRoot":""}