{"version":3,"sources":["features/core/components/legend-layout/components/axis-item/index.module.css","features/core/types.ts","features/core/page/index.module.css","features/core/store/utils.ts","features/core/store/index.tsx","features/core/components/store-context/index.tsx","features/core/components/legend-layout/index.module.css","features/core/components/chart-layout/index.module.css","features/core/components/chart-layout/utils.ts","features/core/components/chart-layout/index.tsx","features/core/components/legend-layout/components/tag-item/index.tsx","features/core/components/legend-layout/components/axis-item/index.tsx","features/core/components/legend-layout/components/new-axis-creator/index.tsx","features/core/components/legend-layout/index.tsx","features/core/components/header-layout/components/sidebar-trigger/index.tsx","features/core/components/header-layout/components/settings-trigger/index.tsx","features/core/components/header-layout/index.tsx","features/core/page/index.tsx","index.tsx","features/core/components/legend-layout/components/tag-item/index.module.css","features/core/components/legend-layout/components/new-axis-creator/index.module.css","features/core/components/settings/index.tsx","features/core/components/header-layout/index.module.css","features/core/hooks/use-root-data.ts","features/core/hooks/use-store-data.ts"],"names":["module","exports","ModalEnum","randomQuantities","randomVariables","getRandomTagName","quantity","random","arrayElement","variable","createCoreStore","isLoaded","modalStates","tagsCount","pointsCount","isRandomTagsNames","setSettings","this","changeStateModal","props","type","isSiderCollapsed","isSiderCollapsingNow","setSiderCollapsed","value","setTimeout","chartInstance","setChartInstance","tagsDictionary","generateTags","tags","Array","from","length","v","key","reduce","acc","tag","id","name","console","log","isTagDraggingNow","setIsTagDraggingNow","axesDictionary","setAxesDictionary","axesOrder","setAxesOrder","generateAxes","axesCount","axes","Object","keys","data","generateData","ts","Date","Math","round","storeContext","React","createContext","StoreProvider","children","core","useLocalStore","store","useMemo","Provider","interfaceColors","am4core","createDateAxis","chart","dateAxis","xAxes","push","am4charts","startLocation","endLocation","renderer","minGridDistance","line","strokeOpacity","strokeWidth","stroke","ticks","template","disabled","labels","location","verticalCenter","horizontalCenter","createValueAxis","valueAxis","yAxes","gridContainer","background","fill","getFor","fillOpacity","inside","maxLabelPosition","padding","marginBottom","createSeriesInstance","seriesInstance","series","dataFields","valueY","dateX","yAxis","tooltipText","ChartLayout","observer","useRootData","state","useEffect","div","leftAxesContainer","layout","cursor","xAxis","axisContainer","width","height","bottomAxesContainer","parent","tooltip","createChart","dispose","clear","forEach","axisKey","map","tagKey","newValueAxis","createSeries","chartHeight","className","css","chartLayout","style","chartDateAxis","TagItem","index","draggableId","snapshot","innerRef","draggableProps","dragHandleProps","ref","cn","tagItem","isTagItemDraggableNow","isDragging","tagDragIcon","AxisItem","axis","providedDraggable","axisItem","isAxisItemDraggableNow","axisTitle","isAxisDraggableBordered","axisDragIcon","droppableId","providedDroppable","droppableProps","axisTags","isAxisTagsDroppableNow","tagIndex","placeholder","NewAxisCreator","direction","provided","droppableContainer","isDroppableNow","dropHintLayout","LegendLayout","legendLayout","legendTitle","legendTitleHidden","onBeforeDragStart","initial","onDragEnd","destination","source","newAxesOrder","splice","startAxis","finishAxis","highestAxesNumber","max","axeisKey","parseInt","replace","newAxis","newAxesDictionary","filter","startTagsKeys","newStartAxis","finishTagsKeys","newFinishAxis","newTags","isDraggingOver","legendDroppableContainer","isContainerDroppableNow","SidebarTrigger","icon","onClick","SettingsTrigger","handleOpenSettings","useCallback","settings","visible","HeaderLayout","headerLayout","Content","Sider","Header","Settings","lazy","Core","modals","sider","collapsed","collapsedWidth","collapsible","theme","trigger","header","recalculatingResult","title","content","contentHidden","fallback","ReactDOM","render","document","getElementById","labelCol","span","wrapperCol","modalState","changeState","handleCloseModal","useForm","form","destroyOnClose","okButtonProps","htmlType","onCancel","onOk","submit","initialValues","onFinish","values","Item","label","min","step","valuePropName","dataSelector","context","storeSelector","useContext","Error","useStoreData","contextData"],"mappings":"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","file":"static/js/main.3853eee6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"axisItem\":\"axis-item_axisItem__30H4p\",\"isAxisItemDraggableNow\":\"axis-item_isAxisItemDraggableNow__16JzR\",\"axisTitle\":\"axis-item_axisTitle__14LIv\",\"axisTags\":\"axis-item_axisTags__2vjPB\",\"isAxisDraggableBordered\":\"axis-item_isAxisDraggableBordered__3HKc-\",\"isAxisTagsDroppableNow\":\"axis-item_isAxisTagsDroppableNow__1o5NZ\",\"axisDragIcon\":\"axis-item_axisDragIcon__xGLn_\"};","export type PayloadUpdateScheme = \"name\" | \"scheme\" | \"svg\";\n\nexport type DataPoint = {\n  ts: Date;\n};\n\nexport type DataTags = {\n  [key: string]: number;\n};\n\nexport type Tag = {\n  id: string;\n  name: string;\n};\n\nexport type Tags = {\n  [key: string]: Tag;\n};\n\nexport type Axis = {\n  id: string;\n  name: string;\n  tags: string[];\n};\n\nexport type Axes = {\n  [key: string]: Axis;\n};\n\nexport enum ModalEnum {\n  settings = \"settings\",\n}\n\ntype Props = {\n  visible: boolean;\n};\n\nexport type ModalProps = {\n  type: ModalEnum;\n  props: Props;\n};\n\nexport type ModalState = {\n  [key in ModalEnum]?: ModalProps;\n};\n\nexport type SettingsState = {\n  tagsCount: number;\n  pointsCount: number;\n  isRandomTagsNames: boolean;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"page_root__2umMH\",\"layout\":\"page_layout__8xvbr\",\"sider\":\"page_sider__3h4Nr\",\"header\":\"page_header__3JIsH\",\"recalculatingResult\":\"page_recalculatingResult__mG2-C\",\"content\":\"page_content__3vzB4\",\"contentHidden\":\"page_contentHidden__12tl9\"};","import { random } from \"faker\";\n\nconst randomQuantities = [\n  \"Напряжение U\",\n  \"Ток I\",\n  \"Активная мощность P\",\n  \"Реактивная мощность Q\",\n  \"Полная мощность S\",\n  \"Фазное напряжение U\",\n];\nconst randomVariables = [\"a\", \"b\", \"c\"];\n\nexport const getRandomTagName = (): string => {\n  const quantity = random.arrayElement(randomQuantities);\n  const variable = random.arrayElement(randomVariables);\n\n  return `${quantity}${variable}`;\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { XYChart } from \"@amcharts/amcharts4/charts\";\n\nimport {\n  Axes,\n  DataPoint,\n  DataTags,\n  ModalProps,\n  ModalState,\n  SettingsState,\n  Tags,\n} from \"../types\";\nimport { getRandomTagName } from \"./utils\";\n\nexport const createCoreStore = () => {\n  return {\n    isLoaded: 0,\n\n    modalStates: null as ModalState | null,\n\n    tagsCount: 10 as number,\n    pointsCount: 100 as number,\n    isRandomTagsNames: false,\n\n    setSettings({ tagsCount, pointsCount, isRandomTagsNames }: SettingsState) {\n      this.tagsCount = tagsCount;\n      this.pointsCount = pointsCount;\n      this.isRandomTagsNames = isRandomTagsNames;\n    },\n\n    changeStateModal(props: ModalProps) {\n      if (!this.modalStates) {\n        this.modalStates = { [props.type]: props };\n      } else {\n        this.modalStates[props.type] = props;\n      }\n    },\n\n    isSiderCollapsed: false,\n    isSiderCollapsingNow: false,\n    setSiderCollapsed(value: boolean) {\n      this.isSiderCollapsingNow = true;\n\n      this.isSiderCollapsed = value;\n      setTimeout(() => {\n        this.isSiderCollapsingNow = false;\n      }, 1000); // timing like sidebar transition duration\n    },\n\n    chartInstance: null as XYChart | null,\n\n    setChartInstance(value: XYChart) {\n      this.chartInstance = value;\n    },\n\n    tagsDictionary: {} as Tags,\n    generateTags(tagsCount: number) {\n      const tags = Array.from(\n        { length: tagsCount },\n        (v, key) => key + 1\n      ).reduce((acc, key) => {\n        const tag = {\n          id: `tag-${key}`,\n          name: this.isRandomTagsNames ? getRandomTagName() : `Tag-${key}`,\n        };\n        return {\n          ...acc,\n          [`tag-${key}`]: tag,\n        };\n      }, {} as Tags);\n      console.log(\"tags\", tags);\n      this.tagsDictionary = tags;\n    },\n\n    isTagDraggingNow: false,\n    setIsTagDraggingNow(value: boolean) {\n      this.isTagDraggingNow = value;\n    },\n\n    axesDictionary: {} as Axes,\n    setAxesDictionary(value: Axes) {\n      this.axesDictionary = value;\n    },\n    axesOrder: [] as string[],\n    setAxesOrder(value: string[]) {\n      this.axesOrder = value;\n    },\n    generateAxes(axesCount: number) {\n      const axes = Array.from(\n        { length: axesCount },\n        (v, key) => key + 1\n      ).reduce((acc, key) => {\n        return {\n          ...acc,\n          [`axis-${key}`]: {\n            name: `Axis-${key}`,\n            id: `axis-${key}`,\n            tags: [this.tagsDictionary[`tag-${key}`].id],\n          },\n        };\n      }, {} as Axes);\n      const axesOrder = Object.keys(axes);\n      console.log(\"axes\", axes);\n\n      this.axesOrder = axesOrder;\n      this.axesDictionary = axes;\n    },\n\n    data: [] as DataPoint[],\n    generateData({ tagsCount = 10, pointsCount = 100 }) {\n      this.generateTags(tagsCount);\n      this.generateAxes(tagsCount);\n      const data: DataPoint[] = Array.from(\n        { length: pointsCount },\n        (v, key) => {\n          return {\n            ts: new Date(2020, 0, key),\n            ...Object.keys(this.tagsDictionary).reduce(\n              (acc, tag) => ({\n                ...acc,\n                [tag]: Math.round(Math.random() * 100) + 100,\n                // Math.round((Math.random() < 0.5 ? 1 : -1) + key / 5),\n              }),\n              {} as DataTags\n            ),\n          };\n        }\n      );\n      console.log(\"data\", data);\n      this.data = data;\n    },\n  };\n};\n\nexport type CoreStore = ReturnType<typeof createCoreStore>;\n","import React, { useMemo } from \"react\";\n\nimport { useLocalStore } from \"mobx-react-lite\";\n\nimport { StoreState } from \"../stores-types\";\nimport { createCoreStore } from \"../../store\";\n\ntype StoreProviderProps = {\n  children?: React.ReactNode;\n};\n\nexport const StoreProvider: React.FC = ({ children }: StoreProviderProps) => {\n  const core = useLocalStore(createCoreStore);\n\n  const store = useMemo(() => ({ core }), [core]);\n\n  return (\n    <storeContext.Provider value={store}>{children}</storeContext.Provider>\n  );\n};\n\nexport const storeContext = React.createContext<StoreState | null>(null);\n\nexport default StoreProvider;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"legendLayout\":\"legend-layout_legendLayout__1XgHa\",\"legendTitle\":\"legend-layout_legendTitle__1Prdt\",\"legendTitleHidden\":\"legend-layout_legendTitleHidden__2tkku\",\"legendDroppableContainer\":\"legend-layout_legendDroppableContainer__2zJkG\",\"isContainerDroppableNow\":\"legend-layout_isContainerDroppableNow__vH6-F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"chart-layout_layout__3AZ1P\",\"chartLayout\":\"chart-layout_chartLayout__2GBLU\",\"chart\":\"chart-layout_chart__24cdx\",\"chartDateAxis\":\"chart-layout_chartDateAxis__2v8Bf\"};","import * as am4charts from \"@amcharts/amcharts4/charts\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport { ValueAxis, XYChart, XYSeries } from \"@amcharts/amcharts4/charts\";\n\nconst interfaceColors = new am4core.InterfaceColorSet();\n\nconst createChart = (div: string): { chart: XYChart } => {\n  const chart = am4core.create(div, am4charts.XYChart);\n\n  chart.padding(0, 0, 0, 0); // reset default 0's\n  chart.leftAxesContainer.layout = \"vertical\";\n\n  const dateAxis = createDateAxis(chart);\n\n  const cursor = new am4charts.XYCursor();\n  chart.cursor = cursor;\n  chart.cursor.xAxis = dateAxis;\n\n  const axisContainer = am4core.create(\"date-axis\", am4core.Container);\n  axisContainer.width = am4core.percent(100);\n  axisContainer.height = am4core.percent(100);\n\n  chart.bottomAxesContainer.parent = axisContainer;\n  dateAxis.tooltip!.parent = axisContainer;\n  dateAxis.renderer.ticks.template.parent = axisContainer;\n\n  return { chart };\n};\n\nconst createDateAxis = (chart: XYChart) => {\n  const dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n  dateAxis.startLocation = 0.5;\n  dateAxis.endLocation = 0.5;\n  dateAxis.renderer.minGridDistance = 100;\n\n  dateAxis.renderer.line.strokeOpacity = 0.5;\n  dateAxis.renderer.line.strokeWidth = 5;\n  dateAxis.renderer.line.stroke = am4core.color(\"#000000\");\n\n  dateAxis.renderer.ticks.template.disabled = false;\n  dateAxis.renderer.ticks.template.strokeOpacity = 1;\n  dateAxis.renderer.ticks.template.length = 10;\n\n  dateAxis.renderer.labels.template.location = 0.5;\n  dateAxis.renderer.labels.template.verticalCenter = \"middle\";\n  dateAxis.renderer.labels.template.horizontalCenter = \"middle\";\n\n  return dateAxis;\n};\n\nconst createValueAxis = (chart: am4charts.XYChart): ValueAxis => {\n  const valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n\n  valueAxis.renderer.gridContainer.background.fill = interfaceColors.getFor(\n    \"alternativeBackground\"\n  );\n  valueAxis.renderer.gridContainer.background.fillOpacity = 0.05;\n\n  valueAxis.renderer.inside = true;\n  valueAxis.renderer.maxLabelPosition = 0.99;\n  valueAxis.renderer.labels.template.padding(0, 2, 0, 2);\n  valueAxis.renderer.labels.template.verticalCenter = \"bottom\";\n\n  valueAxis.marginBottom = 10;\n\n  return valueAxis;\n};\n\nconst createSeries = (\n  chart: XYChart,\n  valueAxis: ValueAxis,\n  id: string\n): XYSeries => {\n  let series: am4charts.XYSeries;\n  if (!valueAxis) {\n    const newValueAxis = createValueAxis(chart);\n    series = createSeriesInstance(chart, newValueAxis, id);\n  } else {\n    series = createSeriesInstance(chart, valueAxis, id);\n  }\n\n  return series;\n};\n\nconst createSeriesInstance = (\n  chart: am4charts.XYChart,\n  valueAxis: ValueAxis,\n  id: string\n) => {\n  console.log({ valueAxis, id });\n\n  const seriesInstance = chart.series.push(new am4charts.LineSeries());\n  seriesInstance.strokeWidth = 1;\n\n  seriesInstance.dataFields.valueY = `${id}`;\n  seriesInstance.dataFields.dateX = \"ts\";\n  seriesInstance.yAxis = valueAxis;\n  seriesInstance.name = id;\n  seriesInstance.tooltipText = `Значение: {valueY}`;\n\n  return seriesInstance;\n};\n\nexport { createChart, createSeries, createValueAxis };\n","import React, { useEffect, useMemo } from \"react\";\n\nimport { observer } from \"mobx-react-lite\";\nimport { useRootData } from \"features/core/hooks\";\n\nimport { createChart, createSeries, createValueAxis } from \"./utils\";\n\nimport css from \"./index.module.css\";\n\nconst ChartLayout: React.FC = observer(() => {\n  const {\n    tagsDictionary,\n    axesOrder,\n    axesDictionary,\n    data,\n    chartInstance,\n    setChartInstance,\n  } = useRootData((state) => ({\n    tagsDictionary: state.core.tagsDictionary,\n    axesOrder: state.core.axesOrder,\n    axesDictionary: state.core.axesDictionary,\n    data: state.core.data,\n    chartInstance: state.core.chartInstance,\n    setChartInstance: state.core.setChartInstance,\n  }));\n\n  useEffect(() => {\n    const { chart } = createChart(\"chart\");\n    setChartInstance(chart);\n    return () => chart.dispose();\n  }, [setChartInstance]);\n\n  useEffect(() => {\n    if (chartInstance) {\n      if (data.length) {\n        chartInstance.yAxes.clear();\n        chartInstance.series.clear();\n        chartInstance.data = data;\n\n        axesOrder.forEach((axisKey) => {\n          const valueAxis = createValueAxis(chartInstance);\n\n          const axis = axesDictionary[axisKey];\n\n          axis.tags.map((tagKey) => {\n            const tag = tagsDictionary[tagKey];\n            return createSeries(chartInstance, valueAxis, tag.id);\n          });\n        });\n      }\n    }\n  }, [axesOrder, axesDictionary, tagsDictionary, data, chartInstance]);\n\n  const chartHeight = useMemo(() => {\n    if (axesOrder.length <= 4) {\n      return \"100%\";\n    }\n    return 200 * axesOrder.length;\n  }, [axesOrder]);\n\n  console.log(\"chartHeight\", chartHeight);\n\n  return (\n    <div className={css.layout}>\n      <div className={css.chartLayout}>\n        {chartHeight && (\n          <div\n            className={css.chart}\n            id=\"chart\"\n            style={{ height: chartHeight }}\n          />\n        )}\n      </div>\n      <div className={css.chartDateAxis} id=\"date-axis\" />\n    </div>\n  );\n});\n\nexport default ChartLayout;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport { Draggable } from \"react-beautiful-dnd\";\nimport React, { FC } from \"react\";\nimport cn from \"classnames\";\n\nimport { Tag } from \"features/core/types\";\nimport css from \"./index.module.css\";\n\ntype TagItemProps = {\n  tag: Tag;\n  index: number;\n};\nconst TagItem: FC<TagItemProps> = ({ tag, index }: TagItemProps) => {\n  return (\n    <Draggable draggableId={`${tag.id}`} index={index}>\n      {({ innerRef, draggableProps, dragHandleProps }, snapshot) => (\n        <h4\n          ref={innerRef}\n          className={cn(css.tagItem, {\n            [css.isTagItemDraggableNow]: snapshot.isDragging,\n          })}\n          {...draggableProps}\n          {...dragHandleProps}\n        >\n          <span>{tag.name}</span>\n          <span className={css.tagDragIcon}>⋮</span>\n        </h4>\n      )}\n    </Draggable>\n  );\n};\n\nexport default TagItem;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { useRootData } from \"features/core/hooks\";\nimport React, { FC } from \"react\";\nimport cn from \"classnames\";\n\nimport { Axis } from \"features/core/types\";\nimport { observer } from \"mobx-react-lite\";\nimport TagItem from \"../tag-item\";\nimport css from \"./index.module.css\";\n\ntype AxisItemProps = {\n  axis: Axis;\n  index: number;\n};\nconst AxisItem: FC<AxisItemProps> = observer(\n  ({ axis: { tags, name, id }, index }: AxisItemProps) => {\n    const { tagsDictionary, isTagDraggingNow } = useRootData((state) => ({\n      tagsDictionary: state.core.tagsDictionary,\n      isTagDraggingNow: state.core.isTagDraggingNow,\n    }));\n\n    return (\n      <Draggable draggableId={`${id}`} index={index}>\n        {(providedDraggable, { isDragging }) => (\n          <div\n            ref={providedDraggable.innerRef}\n            className={cn(css.axisItem, {\n              [css.isAxisItemDraggableNow]: isDragging,\n            })}\n            {...providedDraggable.draggableProps}\n            {...providedDraggable.dragHandleProps}\n          >\n            <h4\n              className={cn(css.axisTitle, {\n                [css.isAxisDraggableBordered]: isDragging,\n              })}\n            >\n              <span>{name}</span>\n              <span className={css.axisDragIcon}>⋮⋮</span>\n            </h4>\n            <Droppable droppableId={id} type=\"tags\">\n              {(providedDroppable) => (\n                <div\n                  ref={providedDroppable.innerRef}\n                  {...providedDroppable.droppableProps}\n                  className={cn(css.axisTags, {\n                    [css.isAxisTagsDroppableNow]: isTagDraggingNow,\n                    [css.isAxisDraggableBordered]: isDragging,\n                  })}\n                >\n                  {tags.map((tagKey, tagIndex) => {\n                    const tag = tagsDictionary[tagKey];\n                    return <TagItem key={tag.id} index={tagIndex} tag={tag} />;\n                  })}\n                  {providedDroppable.placeholder}\n                </div>\n              )}\n            </Droppable>\n\n            <div />\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n);\n\nexport default AxisItem;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport cn from \"classnames\";\n\nimport { useRootData } from \"features/core/hooks\";\n\nimport css from \"./index.module.css\";\n\nconst NewAxisCreator: React.FC = observer(() => {\n  const { isTagDraggingNow } = useRootData((state) => ({\n    isTagDraggingNow: state.core.isTagDraggingNow,\n  }));\n\n  return (\n    <Droppable direction=\"vertical\" droppableId=\"new-axis\" type=\"tags\">\n      {(provided) => (\n        <div\n          className={cn(css.droppableContainer, {\n            [css.isDroppableNow]: isTagDraggingNow,\n          })}\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n        >\n          <div className={css.dropHintLayout}>\n            <span>Drop tag here </span>\n            <span>to create new axis</span>\n          </div>\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  );\n});\n\nexport default NewAxisCreator;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport {\n  DragDropContext,\n  DragStart,\n  DropResult,\n  Droppable,\n} from \"react-beautiful-dnd\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport cn from \"classnames\";\n\nimport { useRootData } from \"features/core/hooks\";\n\nimport { AxisItem } from \"./components\";\nimport NewAxisCreator from \"./components/new-axis-creator\";\nimport css from \"./index.module.css\";\n\nconst LegendLayout: React.FC = observer(() => {\n  const {\n    isSiderCollapsed,\n    axesOrder,\n    axesDictionary,\n    setAxesOrder,\n    setAxesDictionary,\n    setIsTagDraggingNow,\n  } = useRootData((state) => ({\n    isSiderCollapsed: state.core.isSiderCollapsed,\n    axesOrder: state.core.axesOrder,\n    axesDictionary: state.core.axesDictionary,\n    setAxesOrder: state.core.setAxesOrder,\n    setAxesDictionary: state.core.setAxesDictionary,\n    setIsTagDraggingNow: state.core.setIsTagDraggingNow,\n  }));\n\n  const onDragEnd = ({\n    draggableId,\n    destination,\n    source,\n    type,\n  }: DropResult) => {\n    setIsTagDraggingNow(false);\n\n    if (!destination) return;\n\n    const isSamePlace =\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index;\n\n    if (isSamePlace) return;\n\n    if (type === \"axes\") {\n      // To re-order axes\n      const newAxesOrder = Array.from(axesOrder);\n      newAxesOrder.splice(source.index, 1);\n      newAxesOrder.splice(destination.index, 0, draggableId);\n\n      setAxesOrder(newAxesOrder);\n      return;\n    }\n\n    const startAxis = axesDictionary[source.droppableId];\n    const finishAxis = axesDictionary[destination.droppableId];\n\n    if (type === \"tags\" && destination.droppableId === \"new-axis\") {\n      const highestAxesNumber =\n        Math.max(\n          ...axesOrder.map((axeisKey) =>\n            parseInt(axeisKey.replace(/[^\\d]/g, \"\"), 10)\n          )\n        ) + 1;\n\n      const newAxis = {\n        [`axis-${highestAxesNumber}`]: {\n          id: `axis-${highestAxesNumber}`,\n          name: `Axis-${highestAxesNumber}`,\n          tags: [draggableId],\n        },\n      };\n\n      const newAxesDictionary = {\n        ...axesDictionary,\n        ...newAxis,\n        [source.droppableId]: {\n          ...startAxis,\n          tags: startAxis.tags.filter((tag) => tag !== draggableId),\n        },\n      };\n\n      // Clearing axes with no tags\n      if (!newAxesDictionary[source.droppableId].tags.length)\n        delete newAxesDictionary[source.droppableId];\n\n      setAxesOrder(Object.keys(newAxesDictionary));\n      setAxesDictionary(newAxesDictionary);\n\n      return;\n    }\n\n    if (startAxis === finishAxis) {\n      // Moving tags inside axis\n\n      const newTags = Array.from(startAxis.tags);\n      newTags.splice(source.index, 1);\n      newTags.splice(destination.index, 0, draggableId);\n\n      const newAxesDictionary = {\n        ...axesDictionary,\n        [source.droppableId]: {\n          ...startAxis,\n          tags: newTags,\n        },\n      };\n      setAxesDictionary(newAxesDictionary);\n      return;\n    }\n\n    // Moving tag from one axis to another\n    const startTagsKeys = Array.from(startAxis.tags);\n    // Updating start axis - removing draggable tag\n    startTagsKeys.splice(source.index, 1);\n\n    const newStartAxis = {\n      [source.droppableId]: {\n        ...startAxis,\n        tags: startTagsKeys,\n      },\n    };\n\n    const finishTagsKeys = Array.from(finishAxis.tags);\n    // Updating finish axis - adding draggable tag\n    finishTagsKeys.splice(destination.index, 0, draggableId);\n\n    const newFinishAxis = {\n      [destination.droppableId]: {\n        ...finishAxis,\n        tags: finishTagsKeys,\n      },\n    };\n\n    const newAxesDictionary = {\n      ...axesDictionary,\n      ...newStartAxis,\n      ...newFinishAxis,\n    };\n\n    if (!startTagsKeys.length) {\n      // Clearing axes with no tags\n      delete newAxesDictionary[source.droppableId];\n\n      setAxesOrder(axesOrder.filter((axis) => axis !== source.droppableId));\n    }\n\n    setAxesDictionary(newAxesDictionary);\n  };\n\n  const onBeforeDragStart = (initial: DragStart) =>\n    setIsTagDraggingNow(initial.type === \"tags\");\n\n  return (\n    <div className={css.legendLayout}>\n      <h2\n        className={cn(css.legendTitle, {\n          [css.legendTitleHidden]: isSiderCollapsed,\n        })}\n      >\n        LEGEND\n      </h2>\n      {axesOrder.length && (\n        <DragDropContext\n          onBeforeDragStart={onBeforeDragStart}\n          onDragEnd={onDragEnd}\n        >\n          <Droppable direction=\"vertical\" droppableId=\"axes\" type=\"axes\">\n            {(provided, { isDraggingOver }) => (\n              <div\n                className={cn(css.legendDroppableContainer, {\n                  [css.isContainerDroppableNow]: isDraggingOver,\n                })}\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {axesOrder.map((axisKey, index) => {\n                  const axis = axesDictionary[axisKey];\n                  return <AxisItem key={axisKey} axis={axis} index={index} />;\n                })}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n          <NewAxisCreator />\n          {/* {TODO: add trash droppable} */}\n        </DragDropContext>\n      )}\n    </div>\n  );\n});\n\nexport default LegendLayout;\n","import { Button } from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport MenuFoldOutlined from \"@ant-design/icons/MenuFoldOutlined\";\nimport MenuUnfoldOutlined from \"@ant-design/icons/MenuUnfoldOutlined\";\n\nimport React from \"react\";\n\nimport { useRootData } from \"features/core/hooks\";\n\nconst SidebarTrigger: React.FC = observer(() => {\n  const {\n    isSiderCollapsed,\n    isSiderCollapsingNow,\n    setSiderCollapsed,\n  } = useRootData((state) => ({\n    isSiderCollapsed: state.core.isSiderCollapsed,\n    isSiderCollapsingNow: state.core.isSiderCollapsingNow,\n\n    setSiderCollapsed: state.core.setSiderCollapsed,\n  }));\n\n  const onCollapse = () => setSiderCollapsed(!isSiderCollapsed);\n\n  return (\n    <Button\n      disabled={isSiderCollapsingNow}\n      icon={isSiderCollapsed ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\n      onClick={onCollapse}\n      type=\"link\"\n    />\n  );\n});\n\nexport default SidebarTrigger;\n","import { Button } from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport SettingOutlined from \"@ant-design/icons/SettingOutlined\";\n\nimport React, { useCallback } from \"react\";\n\nimport { ModalEnum } from \"features/core/types\";\nimport { useRootData } from \"features/core/hooks\";\n\nconst SettingsTrigger: React.FC = observer(() => {\n  const { changeStateModal } = useRootData((state) => ({\n    modalStates: state.core.modalStates,\n    changeStateModal: state.core.changeStateModal,\n  }));\n\n  const handleOpenSettings = useCallback(() => {\n    changeStateModal({ type: ModalEnum.settings, props: { visible: true } });\n  }, [changeStateModal]);\n\n  return (\n    <Button\n      icon={<SettingOutlined />}\n      onClick={handleOpenSettings}\n      type=\"link\"\n    />\n  );\n});\n\nexport default SettingsTrigger;\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\n\nimport { SettingsTrigger, SidebarTrigger } from \"./components\";\n\nimport css from \"./index.module.css\";\n\nconst HeaderLayout: React.FC = observer(() => {\n  return (\n    <div className={css.headerLayout}>\n      <SidebarTrigger />\n      <SettingsTrigger />\n    </div>\n  );\n});\n\nexport default HeaderLayout;\n","import { Layout, Result } from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport AreaChartOutlined from \"@ant-design/icons/AreaChartOutlined\";\n\nimport React, { Suspense, lazy, useEffect } from \"react\";\n\nimport cn from \"classnames\";\n\nimport { ChartLayout, LegendLayout } from \"../components\";\n\nimport { ModalEnum } from \"../types\";\nimport { useRootData } from \"../hooks\";\nimport HeaderLayout from \"../components/header-layout\";\nimport css from \"./index.module.css\";\n\nconst { Content, Sider, Header } = Layout;\n\nconst Settings = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"rule-manager-lazy\"  */ \"../components/settings\"\n    )\n);\n\nconst Core: React.FC = observer(() => {\n  const {\n    modals,\n    isSiderCollapsed,\n    isSiderCollapsingNow,\n    tagsCount,\n    pointsCount,\n    generateData,\n  } = useRootData((state) => ({\n    modals: state.core.modalStates,\n    isSiderCollapsed: state.core.isSiderCollapsed,\n    isSiderCollapsingNow: state.core.isSiderCollapsingNow,\n    tagsCount: state.core.tagsCount,\n    pointsCount: state.core.pointsCount,\n    generateData: state.core.generateData,\n  }));\n\n  useEffect(() => {\n    generateData({ tagsCount, pointsCount });\n  }, [tagsCount, pointsCount, generateData]);\n\n  return (\n    <Layout className={css.layout}>\n      <Sider\n        className={css.sider}\n        collapsed={isSiderCollapsed}\n        collapsedWidth={150}\n        collapsible\n        theme=\"light\"\n        trigger={null}\n        width=\"20%\"\n      >\n        <LegendLayout />\n      </Sider>\n\n      <Layout className=\"site-layout\">\n        <Header className={css.header}>\n          <HeaderLayout />\n        </Header>\n        {isSiderCollapsingNow && (\n          <Result\n            className={css.recalculatingResult}\n            icon={<AreaChartOutlined />}\n            title=\"Recalculating...\"\n          />\n        )}\n        <Content\n          className={cn(css.content, {\n            [css.contentHidden]: isSiderCollapsingNow,\n          })}\n        >\n          <ChartLayout />\n        </Content>\n      </Layout>\n\n      {modals && modals[ModalEnum.settings] && (\n        <Suspense fallback={null}>\n          <Settings />\n        </Suspense>\n      )}\n    </Layout>\n  );\n});\n\nexport default Core;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"antd/dist/antd.css\";\n\nimport { Core, StoreProvider } from \"features/core\";\n\nReactDOM.render(\n  <StoreProvider>\n    <Core />\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tagItem\":\"tag-item_tagItem__1k1Fb\",\"tagDragIcon\":\"tag-item_tagDragIcon__1eNNY\",\"isTagItemDraggableNow\":\"tag-item_isTagItemDraggableNow__1zNQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"droppableContainer\":\"new-axis-creator_droppableContainer__2skdI\",\"isDroppableNow\":\"new-axis-creator_isDroppableNow__2ni8Q\",\"dropHintLayout\":\"new-axis-creator_dropHintLayout__38_OC\"};","/* eslint-disable react/jsx-props-no-spreading */\nimport { Form, InputNumber, Modal, Switch } from \"antd\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\n\nimport { ModalEnum, SettingsState } from \"features/core/types\";\nimport { useRootData } from \"features/core/hooks\";\n\nconst layout = {\n  labelCol: { span: 12 },\n  wrapperCol: { span: 12 },\n};\n\nconst Settings: React.FC = observer(() => {\n  const {\n    modalState,\n    tagsCount,\n    pointsCount,\n    isRandomTagsNames,\n    changeState,\n    setSettings,\n  } = useRootData((store) => ({\n    modalState: store.core.modalStates?.[ModalEnum.settings],\n    tagsCount: store.core.tagsCount,\n    pointsCount: store.core.pointsCount,\n    isRandomTagsNames: store.core.isRandomTagsNames,\n    changeState: store.core.changeStateModal,\n    setSettings: store.core.setSettings,\n  }));\n\n  const handleCloseModal = () => {\n    changeState({ type: ModalEnum.settings, props: { visible: false } });\n  };\n\n  const [form] = Form.useForm();\n\n  const onFinish = (values: SettingsState) => {\n    console.log(\"Success:\", values);\n    setSettings(values);\n  };\n\n  const handleOk = () => {\n    form.submit();\n    handleCloseModal();\n  };\n\n  return (\n    <Modal\n      destroyOnClose\n      okButtonProps={{ htmlType: \"submit\" }}\n      onCancel={handleCloseModal}\n      onOk={handleOk}\n      title=\"Settings\"\n      visible={modalState?.props.visible}\n      width={400}\n    >\n      <Form\n        {...layout}\n        form={form}\n        initialValues={{\n          pointsCount,\n          tagsCount,\n          isRandomTagsNames,\n        }}\n        onFinish={onFinish}\n      >\n        <Form.Item label=\"Points count\" name=\"pointsCount\">\n          <InputNumber max={1000} min={50} step={50} />\n        </Form.Item>\n        <Form.Item label=\"Tags count\" name=\"tagsCount\">\n          <InputNumber max={15} min={1} />\n        </Form.Item>\n        <Form.Item\n          label=\"Random tags names\"\n          name=\"isRandomTagsNames\"\n          valuePropName=\"checked\"\n        >\n          <Switch />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n});\n\nexport default Settings;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerLayout\":\"header-layout_headerLayout__3SMKc\"};","import { StoreState } from \"features/core/components/stores-types\";\nimport { storeContext } from \"features/core/components/store-context\";\nimport { useStoreData } from \"./use-store-data\";\n\nexport const useRootData = <Selection>(\n  dataSelector: (store: StoreState) => Selection\n): Selection =>\n  useStoreData(storeContext, (contextData) => contextData!, dataSelector);\n","import React from \"react\";\n\n// import { useObserver } from 'mobx-react-lite';\n\nexport const useStoreData = <Selection, ContextData, Store>(\n  context: React.Context<ContextData>,\n  storeSelector: (contextData: ContextData) => Store,\n  dataSelector: (store: Store) => Selection\n): Selection => {\n  const value = React.useContext(context);\n  if (!value) {\n    throw new Error();\n  }\n  const store = storeSelector(value);\n  return dataSelector(store);\n  // return useObserver(() => {\n  //   return dataSelector(store);\n  // });\n};\n"],"sourceRoot":""}